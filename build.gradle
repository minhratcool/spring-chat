apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'

version = '1.0'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8



buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
}

ext {
    commonsPoolVersion = '2.4.2'
    nettyVersion = '4.0.33.Final'
    reactorVersion = '2.0.7.RELEASE'
    redisVersion = '0.6'
    springSessionVersion = '1.1.0.M1'
    springDataJpaVersion = '1.11.6.RELEASE'
    hibernateVersion = '5.2.10.Final'
    postgresql = '9.4.1208-jdbc42-atlassian-hosted'
    hikariCPVersion = '2.6.3'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-redis")
    
    compile("org.springframework.security:spring-security-messaging")
    compile("org.springframework.session:spring-session:$springSessionVersion")
    compile("org.apache.commons:commons-pool2:$commonsPoolVersion")
    compile("com.github.kstyrc:embedded-redis:$redisVersion")
    compile("io.projectreactor:reactor-core:${reactorVersion}")
    compile("io.projectreactor:reactor-net:${reactorVersion}") {
        exclude group: "io.netty", module: "netty-all"
    }
    compile("io.netty:netty-all:$nettyVersion")
    compile("org.springframework.data:spring-data-jpa:1.9.0.RELEASE")
    compile("org.springframework.data:spring-data-commons:1.11.0.RC1")
    compile("org.hibernate:hibernate-entitymanager:4.3.8.Final")
    compile("postgresql:postgresql:${postgresql}")
    compile("com.zaxxer:HikariCP:2.3.0")
    compile("org.hibernate:hibernate-core:4.3.8.Final")
    compile("org.jadira.usertype:usertype.core:3.2.0.GA")
    compile("org.jadira.usertype:usertype.extended:3.2.0.GA")
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.0.RC3'



    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}